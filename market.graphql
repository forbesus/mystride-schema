
## Queries
type Query {
  ## Barn
  getBands(input: GetBrandsInput): BrandsResult!
  getBand(input: GetBrandInput): BrandResult!
}

## Mutations



## Brand
type Brand {
  brandId: ID!
  brandOrgId: ID!
  brandAvatarId: ID!
  brandName: String!
  brandStatus: BrandStatus!
  brandNameLocalized: String
  brandProductCategories: [BrandProductCategory]!
}

type BrandSummary {
  brandId: ID!
  brandOrgId: ID!
  brandAvatarId: ID!
  brandName: String!
  brandStatus: BrandStatus!
  brandNameLocalized: String
}

input GetBrandsInput {
  actingId: ID!
  brandOrgId: ID
  brandProductCategories: [BrandProductCategory!]
  startKey: String
}

type BrandsResult {
  result: MsResult!
  brandSummaries: [BrandSummary]
  lastKey: String
  error: BrandError
}

input GetBrandInput {
  actingId: ID!
  brandId: ID!
}

type BrandResult {
  result: MsResult!
  brand: Brand!
  error: BrandError
}

enum BrandProductCategory {
 NUTRITION
 PHARMACEUTICAL
}

enum BrandError {
 NOT_AUTHORIZED
 NONEXISTENT_ACTING_ID
 INVALID_ACTING_ID
 INACTIVE_ACTING_ID
 NONEXISTENT_BRAND_ID
 INVALID_BRAND_ID
}

enum BrandStatus {
 ACTIVE
 INACTIVE
}


## NutritionProduct
type NutritionProduct {
  nutritionProductId: ID!
  brand: Brand!
  nutritionProductType: NutritionProductType!
  nutritionProductProfile: ProductProfile!
}

type NutritionProductSummary {
  nutritionProductId: ID!
  brandSummary: BrandSummary!
  nutritionProductProfileSummary: ProductProfileSummary!
}

enum NutritionProductType {
 FORAGE
 GRAIN
 SUPPLEMENT
}

union NutritionProductProfile = ForageProfile | GrainProfile | SupplementProfile

union NutritionProductProfileSummary = ForageProfileSummary | GrainProfileSummary | SupplementProfileSummary

## Forage
type ForageProfile {
  forageType: ForageType
  forageQuality: ForageQuality
  forageColor: ForageColor
}

type ForageProfileSummary {
  forageType: ForageType
  forageQuality: ForageQuality
  forageColor: ForageColor
}


enum ForageType {
  ALFALFA_HAY
  CLOVER_HAY
  ORCHARD_GRASS
  BERMUDA_GRASS
  OAT_HAY
  MEADOW_HAY
  MIXED_HAY
}

enum ForageQuality {
 PREMIUM
 GOOD
 FAIR
 POOR 
 UTILITY
}

enum ForageColor {
  BRIGHT_GREEN
  PALE_GREEN
  YELLOW
  BROWN
  GRAY 
  MIXED
}


## Grain
type GrainProfile {
  grainName: String!
  grainNameLocalized: String
  grainAvatarId: ID!
}

type GrainProfileSummary {
  grainName: String!
  grainNameLocalized: String
  grainAvatarId: ID!
}


# Supplement
type SupplementProfile {
  supplementName: String!
  supplementNameLocalized: String
  supplementAvatarId: ID!
}

type SupplementProfileSummary {
  supplementName: String!
  supplementNameLocalized: String
  supplementAvatarId: ID!
}