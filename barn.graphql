## Queries
type Query {
  ## BarnSummaries
  getBarnSummaries(input: GetBarnSummariesInput): [BarnSummary]!

  ## BarnProfile
  getBarnProfile(input: GetBarnProfileInput): BarnProfile!

  ## BarnBoard
  getBarnBoardSummaries(input: GetBarnBoardSummariesInput): [BarnBoardSummary]!
  getBarnBoard(input: GetBarnBoardInput): BarnBoard!

  ## BarnFamily
  getBarnFamilySummaries(
    input: GetBarnFamilySummariesInput
  ): [BarnFamilySummary]!
  getBarnFamily(input: GetBarnFamilyInput): BarnFamily!

  ## BarnPlan
  getBarnPlanSummaries(input: GetBarnPlanSummariesInput): [BarnPlanSummary]!
  getBarnPlan(input: GetBarnPlanInput): BarnPlan!

  ## BarnActivities
  getBarnActivities(input: GetBarnActivitiesInput): BarnActivities

  ## BarnNotes
  getBarnNotes(input: GetBarnNotesInput): BarnNotes

  ## BarnFacility
  getBarnFacilitySummaries(
    input: GetBarnFacilitySummariesInput
  ): [BarnFacilitySummary]!
  getBarnFacility(input: GetBarnFacilityInput): BarnFacility!
}

## Mutations
type Mutation {
  ## Barn
  createBarn(input: CreateBarnInput): ID!

  ## BarnProfile
  updateBarnProfile(input: UpdateBarnProfileInput): BarnProfile!

  ## BarnBoard
  createBarnBoard(input: CreateBarnBoardInput): BarnBoardSummary!
  updateBarnBoard(input: UpdateBarnBoardInput): BarnBoardSummary!

  ## BarnPlan
  createBarnPlan(input: CreateBarnPlanInput): BarnPlanSummary!
  updateBarnPlan(input: UpdateBarnPlanInput): BarnPlanSummary!

  ## BarnFamily
  createBarnFamily(input: CreateBarnFamilyInput): BarnFamilySummary!
  updateBarnFamily(input: UpdateBarnFamilyInput): BarnFamilySummary!
  acceptBarnFamilyCode(input: AcceptBarnFamilyCodeInput): BarnFamilySummary!

  ## BarnActivity
  createBarnActivity(input: CreateBarnActivityInput): BarnActivity!
  updateBarnActivity(input: UpdateBarnActivityInput): BarnActivity!

  ## BarnNote
  createBarnNote(input: CreateBarnNoteInput): BarnNote!
  updateBarnNote(input: UpdateBarnNoteInput): BarnNote!

  ## BarnFacility
  createBarnFacility(input: CreateBarnFacilityInput): BarnFacilitySummary!
  updateBarnFacility(input: UpdateBarnFacilityInput): BarnFacilitySummary!
}

## Subscriptions
type Subscription {
  ## BarnProfile
  subscribeBarnProfile(barnId: ID!): BarnProfile
    @aws_subscribe(mutations: ["updateBarnProfile"])

  ## BarnBoard
  subscribeBarnBoardSummariesByBarnId(barnId: ID!): BarnBoardSummary
    @aws_subscribe(mutations: ["createBarnBoard", "updateBarnBoard"])

  subscribeBarnBoardSummariesByHorseId(horseId: ID!): BarnBoardSummary
    @aws_subscribe(mutations: ["createBarnBoard", "updateBarnBoard"])

  ## BarnFamily
  subscribeBarnFamilySummariesByBarnId(barnId: ID!): BarnFamilySummary
    @aws_subscribe(mutations: ["createBarnFamily", "updateBarnFamily"])

  subscribeBarnFamilySummariesByFamilyId(barnFamilyId: ID!): BarnFamilySummary
    @aws_subscribe(mutations: ["createBarnFamily", "updateBarnFamily"])

  ## BarnActivities
  subscribeBarnActivitiesByBarnId(barnId: ID!): BarnActivity
    @aws_subscribe(mutations: ["createBarnActivity", "updateBarnActivity"])

  ## BarnNotes
  subscribeBarnNotesByBarnId(barnId: ID!): BarnNote
    @aws_subscribe(mutations: ["createBarnNote", "updateBarnNote"])

  subscribeBarnNotesBySubjectId(subjectId: ID!): BarnNote
    @aws_subscribe(mutations: ["createBarnNote", "updateBarnNote"])

  ## BarnFacilities
  subscribeBarnFacilitySummariesByBarnId(barnId: ID!): BarnFacilitySummary
    @aws_subscribe(mutations: ["createBarnFacility", "updateBarnFacility"])
}

## Barn
input CreateBarnInput {
  barnOwnerId: ID!
  barnDisplayName: String!
  barnType: BarnType!
  barnAddressInput: UpsertMsAddressInput!
}

enum CreateBarnError {
  NOT_AUTHORIZED
  EXCEEDED_NAME_LENGTH
  EXCEEDED_BARN_LIMIT
  SERVICE
}

type BarnSummary {
  barnId: ID!
  barnRoleAssociation: BarnRole!
  barnFamilyAssociation: BarnFamilySummary
  barnProfileSummary: BarnProfileSummary!
}

input GetBarnSummariesInput {
  associatedId: ID!
}

enum BarnRole {
  BARN_OWNER
  BARN_FAMILY
  BARN_BOARD
  MYSTRIDE
}

## Barn
type BarnProfile {
  barnId: ID!
  barnOwnerSummary: UserProfilePublic!
  barnPhoneId: ID
  barnEmailId: ID
  barnType: BarnType!
  barnGeohash: String!
  barnStatus: BarnStatus!
  barnDisplayName: String!
  barnCreatedOn: AWSDateTime!
  barnCreatedBy: UserProfileSummary!
  barnModifiedOn: AWSDateTime
  barnModifiedBy: UserProfileSummary
  barnSuspendedOn: AWSDateTime
  barnSuspendedBy: UserProfileSummary
  barnDeactivatedOn: AWSDateTime
  barnDeactivatedBy: UserProfileSummary
  barnDeactivationReason: BarnDeactivationReason
  barnDeactivationComment: String
  barnTimezone: MsTimezone!
  barnAvatarId: ID!
  barnAddress: MsAddress!
  barnLegalName: String
  barnWelcomeMessage: String
}

type BarnProfileSummary {
  barnId: ID!
  barnOwnerSummary: UserProfilePublic!
  barnType: BarnType!
  barnStatus: BarnStatus!
  barnDisplayName: String!
  barnTimezone: MsTimezone!
  barnAvatarId: ID!
  barnCity: String
  barnState: String
  barnCountry: String
  barnCountryCode: String
}

type BarnProfilePublic {
  barnId: ID!
  barnType: BarnType!
  barnDisplayName: String!
  barnAvatarId: ID!
  barnCity: String
  barnState: String
  barnCountry: String
  barnCountryCode: String
}

input GetBarnProfileInput {
  barnId: ID!
  associatedId: ID!
}

input UpdateBarnProfileInput {
  barnId: ID!
  barnAvatarId: ID
  barnDisplayName: String
  barnPhone: String
  barnEmail: String
  barnLegalName: String
  barnTimeZone: MsTimezone
  barnWelcomeMessage: String
  barnAddress: UpsertMsAddressInput
}

enum BarnType {
  COMMERCIAL
  PERSONAL
}

enum BarnStatus {
  ACTIVE
  SUSPENDED
  INACTIVE
}

enum BarnDeactivationReason {
  OWNER
  INACTIVITY
  VIOLATION
}

## BarnBoard
type BarnBoard {
  barnId: ID!
  horseId: ID!
  barnBoardStatus: BarnBoardStatus!
  barnBoardHorse: HorseProfilePublic!
  barnBoardBarn: BarnProfilePublic!
  barnBoardFacilitySummary: BarnFacilitySummary
  barnBoardPlan: BarnPlan
  barnBoardInitiatedOn: AWSDateTime!
  barnBoardInitiatedBy: UserProfilePublic
  barnBoardModifiedOn: AWSDateTime
  barnBoardModifiedBy: UserProfilePublic
  barnBoardApprovedOn: AWSDateTime
  barnBoardApprovedBy: UserProfilePublic
  barnBoardRemovedOn: AWSDateTime
  barnBoardRemovedBy: UserProfilePublic
  barnBoardEndOn: AWSDateTime
  barnBoardComment: String
}

type BarnBoardSummary {
  barnId: ID!
  horseId: ID!
  barnBoardStatus: BarnBoardStatus!
  barnBoardHorseSummary: HorseProfilePublic!
  barnBoardBarnSummary: BarnProfilePublic!
  barnBoardFacilitySummary: BarnFacilitySummary
}

input GetBarnBoardSummariesInput {
  barnId: ID!
  associatedId: ID!
}

input GetBarnBoardInput {
  barnId: ID!
  horseId: ID!
  associatedId: ID!
}

input CreateBarnBoardInput {
  barnId: ID!
  horseId: ID!
  barnBoardStatus: BarnBoardStatus!
  barnBoardType: BarnBoardType
  barnBoardStallId: ID
  barnBoardStall: CreateBarnFacilityInput
  barnBoardPlanPackage: ID
  barnBoardPlanCustom: CreateBarnPlanInput
}

input UpdateBarnBoardInput {
  barnId: ID!
  horseId: ID!
  barnBoardStatus: BarnBoardStatus
  barnBoardType: BarnBoardType
  barnBoardExistingStall: ID
  barnBoardNewStall: CreateBarnFacilityInput
  barnBoardPlanPackage: ID
  barnBoardPlanCustom: CreateBarnPlanInput
}

enum BarnBoardType {
  STALL
  PASTURE
}

enum BarnBoardStatus {
  ACTIVE
  INACTIVE
  INVITED
  DECLINED
  REQUESTED
  DEFERRED
  DENIED
  SUSPENDED
}

## BarnPlan
type BarnPlan {
  barnPlanId: ID!
  barnPlanCreatedOn: AWSDateTime!
  barnPlanCreatedBy: UserProfilePublic!
  barnPlanModifiedOn: AWSDateTime
  barnPlanModifiedBy: UserProfilePublic
  barnPlanType: BarnPlanType!
  barnPlanName: String
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanHayType: ForageType
  barnPlanHayPeriods: [HorseActivityPeriod]
  barnPlanHaySupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [HorseActivityPeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [HorseActivityPeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [HorseActivityPeriod]
  barnPlanTurnoutDuration: [Int]
  barnPlanBlanketing: Boolean
}

type BarnPlanSummary {
  barnPlanId: ID!
  barnPlanType: BarnPlanType!
  barnPlanName: String
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
}

input GetBarnPlanSummariesInput {
  barnId: ID!
  associatedId: ID!
}

input GetBarnPlanInput {
  barnPlanId: ID!
  associatedId: ID!
}

input CreateBarnPlanInput {
  barnPlanName: String
  barnPlanType: BarnPlanType
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanForageType: ForageType
  barnPlanHForagePeriods: [HorseActivityPeriod]
  barnPlanForageSupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [HorseActivityPeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [HorseActivityPeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [HorseActivityPeriod]
  barnPlanTurnoutDuration: [Int]
  barnPlanBlanketing: Boolean
}

input UpdateBarnPlanInput {
  barnPlanName: String
  barnPlanPrice: Int
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanForageType: ForageType
  barnPlanForagePeriods: [HorseActivityPeriod]
  barnPlanForageSupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [HorseActivityPeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [HorseActivityPeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [HorseActivityPeriod]
  barnPlanTurnoutDuration: [Int]
  barnPlanBlanketing: Boolean
}

enum BarnPlanType {
  PACKAGE
  CUSTOM
}

enum BarnPlanSupplier {
  BARN
  HORSE_OWNER
}

## BarnFamily
type BarnFamily {
  barnId: ID!
  barnFamilyId: ID!
  barnFamilyType: BarnFamilyType!
  barnFamilyStatus: BarnFamilyStatus!
  barnFamilyUserProfileSummary: UserProfilePublic
  barnFamilyProProfileSummary: ProProfilePublic
  barnFamilyInvitedOn: AWSDateTime!
  barnFamilyInvitedBy: UserProfilePublic
  barnFamilyAcceptedOn: AWSDateTime
  barnFamilyDeclinedOn: AWSDateTime
  barnFamilySuspendedOn: AWSDateTime
  barnFamilySuspendedBy: UserProfilePublic
  barnFamilyDeactivatedOn: AWSDateTime
  barnFamilyDeactivatedBy: UserProfilePublic
  barnFamilyAutoDeactivateOn: AWSDateTime
  barnFamilyAutoDeactivateSetBy: UserProfilePublic
  barnFamilyIsAnonymous: Boolean
}

type BarnFamilySummary {
  barnId: ID!
  barnFamilyId: ID!
  barnFamilyType: BarnFamilyType!
  barnFamilyStatus: BarnFamilyStatus!
  barnFamilyUserProfileSummary: UserProfilePublic
  barnFamilyProProfileSummary: ProProfilePublic
  barnFamilyInvitedOn: AWSDateTime!
  barnFamilyAcceptedOn: AWSDateTime
  barnFamilyDeclinedOn: AWSDateTime
  barnFamilySuspendedOn: AWSDateTime
  barnFamilySuspendedBy: UserProfilePublic
  barnFamilyDeactivatedOn: AWSDateTime
  barnFamilyDeactivatedBy: UserProfilePublic
  barnFamilyAutoDeactivateOn: AWSDateTime
  barnFamilyAutoDeactivateSetBy: UserProfilePublic
  barnFamilyIsAnonymous: Boolean
}

input GetBarnFamilySummariesInput {
  barnId: ID!
  associatedId: ID!
}

input GetBarnFamilyInput {
  barnId: ID!
  barnFamilyId: ID!
  associatedId: ID!
}

input CreateBarnFamilyInput {
  barnId: ID!
  barnFamilyId: ID
  barnFamilyType: BarnFamilyType!
  barnFamilyAutoDeactivateOn: AWSDateTime
}

input UpdateBarnFamilyInput {
  barnId: ID!
  barnFamilyId: ID!
  barnFamilyStatus: BarnFamilyStatus!
  barnFamilyExpiryTime: Int
}

input AcceptBarnFamilyCodeInput {
  barnCode: ID!
}

enum BarnFamilyType {
  CO_OWNER
  STAFF
  BOARDER
  PRO
  ORG
}

enum BarnFamilyStatus {
  INVITED
  REQUESTED
  DECLINED
  ACTIVE
  SUSPENDED
}

## BarnActivity
type BarnActivities {
  lastKey: String
  activities: [BarnActivity]!
}

type BarnActivity {
  barnId: ID!
  barnActivityType: BarnActivityType
  barnActivityCreatedOn: AWSDateTime!
  barnActivityCreatedBy: UserProfilePublic!
  barnActivityDueDate: AWSDateTime
  barnActivityAssignedTo: UserProfilePublic
  barnActivityCompletedBy: UserProfilePublic
}

input GetBarnActivitiesInput {
  barnId: ID!
  associatedId: ID!
  startKey: String
}

input CreateBarnActivityInput {
  barnId: ID!
  barnActivityType: BarnActivityType!
  barnActivityDueDate: AWSDateTime
  barnActivityAssignedTo: ID
}

input UpdateBarnActivityInput {
  barnId: ID!
  barnActivityId: ID!
  activityCompletedOn: AWSDateTime
  barnActivityDueDate: AWSDateTime
  barnActivityAssignedTo: ID
}

enum BarnActivityType {
  EMPTY_TRASH
  RESTOCK_SUPPLIES
  WASH_BLANKETS
  CLEAN_TACK
  REPAIR
  SWEEP_ISLES
  MOP_FLOORS
}

## BarnNotes
type BarnNotes {
  notes: [BarnNote]!
  lastKey: String
}

type BarnNote {
  barnId: ID!
  barnNoteId: ID!
  subjectId: ID!
  barnNoteCreatedOn: AWSDateTime!
  barnNoteCreatedBy: UserProfilePublic!
  barnNoteTitle: String
  barnNoteBody: String!
  barnNoteIsPined: Boolean
}

input GetBarnNotesInput {
  barnId: ID!
  subjectId: ID!
  associatedId: ID!
  startKey: String
}

input CreateBarnNoteInput {
  barnNoteTitle: String
  barnNoteBody: String!
  barnNoteIsPined: Boolean
}

input UpdateBarnNoteInput {
  barnNoteId: ID!
  associatedId: ID!
  horseNoteIsPined: Boolean
}

input DeleteBarnNoteInput {
  barnNoteId: ID!
  associatedId: ID!
}

## BarnFacility
type BarnFacility {
  barnId: ID!
  barnFacilityId: ID!
  barnFacilityType: BarnFacilityType!
  barnFacilityName: String
  barnFacilityNumber: Float
  barnFacilityDescription: String
  barnFacilityManager: UserProfilePublic
  barnFacilityCreatedOn: AWSDateTime!
  barnFacilityCreatedBy: UserProfilePublic
  barnFacilityModifiedOn: AWSDateTime
  barnFacilityModifiedBy: UserProfilePublic
}

type BarnFacilitySummary {
  barnId: ID!
  barnFacilityId: ID!
  barnFacilityType: BarnFacilityType!
  BarnFacilityName: String
  BarnFacilityNumber: Float
}

input GetBarnFacilitySummariesInput {
  barnId: ID!
  associatedId: ID!
}

input GetBarnFacilityInput {
  barnId: ID!
  barnFacilityId: ID!
  associatedId: ID!
}

input CreateBarnFacilityInput {
  barnId: ID!
}

input UpdateBarnFacilityInput {
  barnId: ID!
  barnFacilityId: ID!
}

enum BarnFacilityType {
  STALL
  PASTURE
  ARENA
  TRAIL
  WASH_BAY
  TACK_ROOM
  FEED_ROOM
  PEN
  OBSERVATION_AREA
  LOUNGE
  TURNOUT_AREA
  RUN
  HAY_STORAGE
  FARRIER_STATION
}

union BarnFacilityProfile =
    StallProfile
  | PastureProfile
  | ArenaProfile
  | TrailProfile
  | WashBayProfile
  | TackRoomProfile
  | FeedRoomProfile
  | PenProfile
  | ObservationAreaProfile
  | LoungeProfile
  | RunProfile
  | TurnoutAreaProfile
  | HayStorageProfile
  | FarrierStationProfile

type StallProfile {
  stallProfileName: String
}

type PastureProfile {
  pastureProfileName: String
}

type ArenaProfile {
  arenaProfileName: String
}

type TrailProfile {
  trailProfileName: String
}

type WashBayProfile {
  washBayProfileName: String
}

type TackRoomProfile {
  tackRoomProfileName: String
}

type FeedRoomProfile {
  feedRoomProfileName: String
}

type PenProfile {
  penProfileName: String
}

type ObservationAreaProfile {
  observationAreaProfileName: String
}

type LoungeProfile {
  loungeOfficeProfileName: String
}

type TurnoutAreaProfile {
  turnoutAreaProfileName: String
}

type RunProfile {
  turnoutAreaProfileName: String
}

type HayStorageProfile {
  hayStorageProfileName: String
}

type FarrierStationProfile {
  farrierStationProfileName: String
}
