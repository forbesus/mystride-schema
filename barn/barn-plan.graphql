type Query {
  getBarnPlanSummaries(
    input: GetBarnPlanSummariesInput
  ): BarnPlanSummariesResult! ## Contains BarnPlanSummaries in SUCCESS case
  getBarnPlan(input: GetBarnPlanInput): BarnPlanResult! ## Contains BarnPlan w/ SUCCESS
}

type Mutation {
  createBarnPlan(input: CreateBarnPlanInput): BarnPlanResult! ## Contains BarnPlan w/ SUCCESS
  updateBarnPlan(input: UpdateBarnPlanInput): BarnPlanResult! ## Contains BarnPlan w/ SUCCESS
  deleteBarnPlan(input: DeleteBarnPlanInput): BarnPlanResult! ## Contains NULL BarnPlan w/ SUCCESS to indicate deletion
}

type BarnPlan {
  barnPlanId: ID!
  barnPlanType: BarnPlanType!
  barnPlanStatus: BarnPlanStatus!
  barnPlanCreatedOn: AWSDateTime!
  barnPlanCreatedBy: UserProfilePublic!
  barnPlanModifiedOn: AWSDateTime
  barnPlanModifiedBy: UserProfilePublic
  barnPlanName: String
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanHayType: ForageType
  barnPlanHayPeriods: [MsServicePeriod]
  barnPlanHaySupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [MsServicePeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [MsServicePeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [MsServicePeriod]
  barnPlanTurnoutBreakfastFacility: ID
  barnPlanTurnoutLunchFacilityId: ID
  barnPlanTurnoutDinnerFacilityId: ID
  barnPlanTurnoutEveningFacilityId: ID
  barnPlanTurnoutBreakfastDuration: Int
  barnPlanTurnoutBreakfastDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutLunchDuration: Int
  barnPlanTurnoutLunchDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutDinnerDuration: Int
  barnPlanTurnoutDinnerDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutEveningDuration: Int
  barnPlanTurnoutEveningDurationUnit: MsTurnoutDurationUnit
  barnPlanBlanketing: Boolean
  barnPlanBlanketType: MsBlanketType
}

type BarnPlanSummary {
  barnPlanId: ID!
  barnPlanType: BarnPlanType!
  barnPlanStatus: BarnPlanStatus!
  barnPlanName: String
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
}

input GetBarnPlanSummariesInput {
  actingId: ID!
  barnId: ID!
  associatedId: ID!
}

type BarnPlanSummariesResult {
  result: MsResult!
  barnPlanSummaries: [BarnPlanSummary]
  lastKey: String
  error: BarnPlanError
}

input GetBarnPlanInput {
  actingId: ID!
  barnPlanId: ID!
  associatedId: ID!
}

input CreateBarnPlanInput {
  actingId: ID!
  barnId: ID!
  barnPlanName: String
  barnPlanType: BarnPlanType!
  barnPlanPrice: Int
  barnPlanCurrency: MsCurrencyCode
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanForageType: ForageType
  barnPlanHForagePeriods: [MsServicePeriod]
  barnPlanForageSupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [MsServicePeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [MsServicePeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [MsServicePeriod]
  barnPlanTurnoutBreakfastFacility: ID
  barnPlanTurnoutLunchFacilityId: ID
  barnPlanTurnoutDinnerFacilityId: ID
  barnPlanTurnoutEveningFacilityId: ID
  barnPlanTurnoutBreakfastDuration: Int
  barnPlanTurnoutBreakfastDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutLunchDuration: Int
  barnPlanTurnoutLunchDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutDinnerDuration: Int
  barnPlanTurnoutDinnerDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutEveningDuration: Int
  barnPlanTurnoutEveningDurationUnit: MsTurnoutDurationUnit
  barnPlanBlanketing: Boolean
  barnPlanBlanketType: MsBlanketType
}

input UpdateBarnPlanInput {
  actingId: ID!
  barnId: ID!
  barnPlanId: ID!
  barnPlanName: String
  barnPlanStatus: BarnPlanStatus
  barnPlanPrice: Int
  barnPlanDescription: String
  barnPlanForage: Boolean
  barnPlanForageType: ForageType
  barnPlanForagePeriods: [MsServicePeriod]
  barnPlanForageSupplier: BarnPlanSupplier
  barnPlanGrain: Boolean
  barnPlanGrainPeriods: [MsServicePeriod]
  barnPlanGrainSupplier: BarnPlanSupplier
  barnPlanSupplement: Boolean
  barnPlanSupplementPeriods: [MsServicePeriod]
  barnPlanSupplementSupplier: BarnPlanSupplier
  barnPlanMedication: Boolean
  barnPlanTurnout: Boolean
  barnPlanTurnoutPeriods: [MsServicePeriod]
  barnPlanTurnoutBreakfastFacility: ID
  barnPlanTurnoutLunchFacilityId: ID
  barnPlanTurnoutDinnerFacilityId: ID
  barnPlanTurnoutEveningFacilityId: ID
  barnPlanTurnoutBreakfastDuration: Int
  barnPlanTurnoutBreakfastDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutLunchDuration: Int
  barnPlanTurnoutLunchDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutDinnerDuration: Int
  barnPlanTurnoutDinnerDurationUnit: MsTurnoutDurationUnit
  barnPlanTurnoutEveningDuration: Int
  barnPlanTurnoutEveningDurationUnit: MsTurnoutDurationUnit
  barnPlanBlanketing: Boolean
  barnPlanBlanketType: MsBlanketType
}

input DeleteBarnPlanInput {
  actingId: ID!
  barnId: ID!
  barnPlanId: ID!
}

type BarnPlanResult {
  result: MsResult!
  barnPlan: BarnPlan
  lastKey: String
  error: BarnPlanError
}

enum BarnPlanError {
  NOT_AUTHORIZED
  NONEXISTENT_ACTING_ID
  INVALID_ACTING_ID
  INACTIVE_ACTING_ID
  NONEXISTENT_BARN_ID
  INVALID_BARN_ID
  INACTIVE_BARN_ID
  NONEXISTENT_BARN_PLAN_ID
  INVALID_BARN_PLAN_ID
  INVALID_STATUS_UPDATE
  EXCEEDED_BARN_PLAN_LIMIT
  INVALID_DEACTIVATION_DATE
  SERVICE
}

enum BarnPlanType {
  PACKAGE
  CUSTOM
}

enum BarnPlanSupplier {
  BARN
  BOARDER
}

enum BarnPlanStatus {
  ACTIVE
  INACTIVE
}

enum MsTurnoutDurationUnit {
  MINUTES
  HOURS
}